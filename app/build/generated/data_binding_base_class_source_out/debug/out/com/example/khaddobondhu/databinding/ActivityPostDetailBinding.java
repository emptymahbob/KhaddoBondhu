// Generated by view binder compiler. Do not edit!
package com.example.khaddobondhu.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.khaddobondhu.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPostDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton buttonContact;

  @NonNull
  public final MaterialButton buttonMessage;

  @NonNull
  public final MaterialButton buttonShare;

  @NonNull
  public final LinearLayout expiryLayout;

  @NonNull
  public final ImageView imageViewFood;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView textViewDescription;

  @NonNull
  public final TextView textViewExpiry;

  @NonNull
  public final TextView textViewFoodType;

  @NonNull
  public final TextView textViewLocation;

  @NonNull
  public final TextView textViewPostType;

  @NonNull
  public final TextView textViewPrice;

  @NonNull
  public final TextView textViewQuantity;

  @NonNull
  public final TextView textViewRequests;

  @NonNull
  public final TextView textViewTime;

  @NonNull
  public final TextView textViewTitle;

  @NonNull
  public final TextView textViewViews;

  @NonNull
  public final Toolbar toolbar;

  private ActivityPostDetailBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton buttonContact, @NonNull MaterialButton buttonMessage,
      @NonNull MaterialButton buttonShare, @NonNull LinearLayout expiryLayout,
      @NonNull ImageView imageViewFood, @NonNull ProgressBar progressBar,
      @NonNull TextView textViewDescription, @NonNull TextView textViewExpiry,
      @NonNull TextView textViewFoodType, @NonNull TextView textViewLocation,
      @NonNull TextView textViewPostType, @NonNull TextView textViewPrice,
      @NonNull TextView textViewQuantity, @NonNull TextView textViewRequests,
      @NonNull TextView textViewTime, @NonNull TextView textViewTitle,
      @NonNull TextView textViewViews, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.buttonContact = buttonContact;
    this.buttonMessage = buttonMessage;
    this.buttonShare = buttonShare;
    this.expiryLayout = expiryLayout;
    this.imageViewFood = imageViewFood;
    this.progressBar = progressBar;
    this.textViewDescription = textViewDescription;
    this.textViewExpiry = textViewExpiry;
    this.textViewFoodType = textViewFoodType;
    this.textViewLocation = textViewLocation;
    this.textViewPostType = textViewPostType;
    this.textViewPrice = textViewPrice;
    this.textViewQuantity = textViewQuantity;
    this.textViewRequests = textViewRequests;
    this.textViewTime = textViewTime;
    this.textViewTitle = textViewTitle;
    this.textViewViews = textViewViews;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPostDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPostDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_post_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPostDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonContact;
      MaterialButton buttonContact = ViewBindings.findChildViewById(rootView, id);
      if (buttonContact == null) {
        break missingId;
      }

      id = R.id.buttonMessage;
      MaterialButton buttonMessage = ViewBindings.findChildViewById(rootView, id);
      if (buttonMessage == null) {
        break missingId;
      }

      id = R.id.buttonShare;
      MaterialButton buttonShare = ViewBindings.findChildViewById(rootView, id);
      if (buttonShare == null) {
        break missingId;
      }

      id = R.id.expiryLayout;
      LinearLayout expiryLayout = ViewBindings.findChildViewById(rootView, id);
      if (expiryLayout == null) {
        break missingId;
      }

      id = R.id.imageViewFood;
      ImageView imageViewFood = ViewBindings.findChildViewById(rootView, id);
      if (imageViewFood == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.textViewDescription;
      TextView textViewDescription = ViewBindings.findChildViewById(rootView, id);
      if (textViewDescription == null) {
        break missingId;
      }

      id = R.id.textViewExpiry;
      TextView textViewExpiry = ViewBindings.findChildViewById(rootView, id);
      if (textViewExpiry == null) {
        break missingId;
      }

      id = R.id.textViewFoodType;
      TextView textViewFoodType = ViewBindings.findChildViewById(rootView, id);
      if (textViewFoodType == null) {
        break missingId;
      }

      id = R.id.textViewLocation;
      TextView textViewLocation = ViewBindings.findChildViewById(rootView, id);
      if (textViewLocation == null) {
        break missingId;
      }

      id = R.id.textViewPostType;
      TextView textViewPostType = ViewBindings.findChildViewById(rootView, id);
      if (textViewPostType == null) {
        break missingId;
      }

      id = R.id.textViewPrice;
      TextView textViewPrice = ViewBindings.findChildViewById(rootView, id);
      if (textViewPrice == null) {
        break missingId;
      }

      id = R.id.textViewQuantity;
      TextView textViewQuantity = ViewBindings.findChildViewById(rootView, id);
      if (textViewQuantity == null) {
        break missingId;
      }

      id = R.id.textViewRequests;
      TextView textViewRequests = ViewBindings.findChildViewById(rootView, id);
      if (textViewRequests == null) {
        break missingId;
      }

      id = R.id.textViewTime;
      TextView textViewTime = ViewBindings.findChildViewById(rootView, id);
      if (textViewTime == null) {
        break missingId;
      }

      id = R.id.textViewTitle;
      TextView textViewTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitle == null) {
        break missingId;
      }

      id = R.id.textViewViews;
      TextView textViewViews = ViewBindings.findChildViewById(rootView, id);
      if (textViewViews == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityPostDetailBinding((CoordinatorLayout) rootView, buttonContact,
          buttonMessage, buttonShare, expiryLayout, imageViewFood, progressBar, textViewDescription,
          textViewExpiry, textViewFoodType, textViewLocation, textViewPostType, textViewPrice,
          textViewQuantity, textViewRequests, textViewTime, textViewTitle, textViewViews, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
