// Generated by view binder compiler. Do not edit!
package com.example.khaddobondhu.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.khaddobondhu.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogEditPostBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button cancelButton;

  @NonNull
  public final FloatingActionButton changeImageButton;

  @NonNull
  public final TextInputEditText descriptionInput;

  @NonNull
  public final TextInputEditText expiryDateEditText;

  @NonNull
  public final AutoCompleteTextView foodTypeSpinner;

  @NonNull
  public final TextInputEditText locationInput;

  @NonNull
  public final ImageView postImageView;

  @NonNull
  public final AutoCompleteTextView postTypeSpinner;

  @NonNull
  public final TextInputEditText priceInput;

  @NonNull
  public final TextInputEditText quantityInput;

  @NonNull
  public final AutoCompleteTextView quantityUnitSpinner;

  @NonNull
  public final Button saveButton;

  @NonNull
  public final TextInputEditText titleInput;

  private DialogEditPostBinding(@NonNull LinearLayout rootView, @NonNull Button cancelButton,
      @NonNull FloatingActionButton changeImageButton, @NonNull TextInputEditText descriptionInput,
      @NonNull TextInputEditText expiryDateEditText, @NonNull AutoCompleteTextView foodTypeSpinner,
      @NonNull TextInputEditText locationInput, @NonNull ImageView postImageView,
      @NonNull AutoCompleteTextView postTypeSpinner, @NonNull TextInputEditText priceInput,
      @NonNull TextInputEditText quantityInput, @NonNull AutoCompleteTextView quantityUnitSpinner,
      @NonNull Button saveButton, @NonNull TextInputEditText titleInput) {
    this.rootView = rootView;
    this.cancelButton = cancelButton;
    this.changeImageButton = changeImageButton;
    this.descriptionInput = descriptionInput;
    this.expiryDateEditText = expiryDateEditText;
    this.foodTypeSpinner = foodTypeSpinner;
    this.locationInput = locationInput;
    this.postImageView = postImageView;
    this.postTypeSpinner = postTypeSpinner;
    this.priceInput = priceInput;
    this.quantityInput = quantityInput;
    this.quantityUnitSpinner = quantityUnitSpinner;
    this.saveButton = saveButton;
    this.titleInput = titleInput;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogEditPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogEditPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_edit_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogEditPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancelButton;
      Button cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.changeImageButton;
      FloatingActionButton changeImageButton = ViewBindings.findChildViewById(rootView, id);
      if (changeImageButton == null) {
        break missingId;
      }

      id = R.id.descriptionInput;
      TextInputEditText descriptionInput = ViewBindings.findChildViewById(rootView, id);
      if (descriptionInput == null) {
        break missingId;
      }

      id = R.id.expiryDateEditText;
      TextInputEditText expiryDateEditText = ViewBindings.findChildViewById(rootView, id);
      if (expiryDateEditText == null) {
        break missingId;
      }

      id = R.id.foodTypeSpinner;
      AutoCompleteTextView foodTypeSpinner = ViewBindings.findChildViewById(rootView, id);
      if (foodTypeSpinner == null) {
        break missingId;
      }

      id = R.id.locationInput;
      TextInputEditText locationInput = ViewBindings.findChildViewById(rootView, id);
      if (locationInput == null) {
        break missingId;
      }

      id = R.id.postImageView;
      ImageView postImageView = ViewBindings.findChildViewById(rootView, id);
      if (postImageView == null) {
        break missingId;
      }

      id = R.id.postTypeSpinner;
      AutoCompleteTextView postTypeSpinner = ViewBindings.findChildViewById(rootView, id);
      if (postTypeSpinner == null) {
        break missingId;
      }

      id = R.id.priceInput;
      TextInputEditText priceInput = ViewBindings.findChildViewById(rootView, id);
      if (priceInput == null) {
        break missingId;
      }

      id = R.id.quantityInput;
      TextInputEditText quantityInput = ViewBindings.findChildViewById(rootView, id);
      if (quantityInput == null) {
        break missingId;
      }

      id = R.id.quantityUnitSpinner;
      AutoCompleteTextView quantityUnitSpinner = ViewBindings.findChildViewById(rootView, id);
      if (quantityUnitSpinner == null) {
        break missingId;
      }

      id = R.id.saveButton;
      Button saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.titleInput;
      TextInputEditText titleInput = ViewBindings.findChildViewById(rootView, id);
      if (titleInput == null) {
        break missingId;
      }

      return new DialogEditPostBinding((LinearLayout) rootView, cancelButton, changeImageButton,
          descriptionInput, expiryDateEditText, foodTypeSpinner, locationInput, postImageView,
          postTypeSpinner, priceInput, quantityInput, quantityUnitSpinner, saveButton, titleInput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
